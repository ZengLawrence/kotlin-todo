services:
  app:
    image: kotlin-todo-spring
    restart: on-failure:3
    depends_on:
      - postgres
      - kafka
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USERNAME: u_postgres
      POSTGRES_PASSWORD: p_postgres
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
    ports:
      - 8080:8080
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 1s
      timeout: 1s
      retries: 120 # try for 2 minutes

  postgres:
    image: postgres:15.3
    environment:
      POSTGRES_PASSWORD: p_postgres
      POSTGRES_USER: u_postgres
      POSTGRES_DB: todo
    volumes:
      - ./src/test/resources/sql/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_kafka_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
